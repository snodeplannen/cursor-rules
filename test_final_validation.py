#!/usr/bin/env python3
"""
Finale validatie test voor JSON schema extractie systeem.
"""

import sys
import os

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "src"))

print("üöÄ Starten finale validatie...")

# Test 1: Imports
print("1Ô∏è‚É£ Testen imports...")
try:
    from mcp_invoice_processor.processing import ExtractionMethod
    print("   ‚úÖ ExtractionMethod import succesvol")
    print(f"   üìã Beschikbare methodes: {list(ExtractionMethod)}")
except Exception as e:
    print(f"   ‚ùå Import fout: {e}")
    sys.exit(1)

# Test 2: Document classificatie
print("2Ô∏è‚É£ Testen document classificatie...")
try:
    from mcp_invoice_processor.processing.classification import classify_document
    
    test_text = "FACTUUR INV-001 Totaal: ‚Ç¨100.00"
    doc_type = classify_document(test_text)
    print(f"   ‚úÖ Classificatie succesvol: {doc_type.value}")
    
    if doc_type.value == "unknown":
        print("   ‚ö†Ô∏è Waarschuwing: Document geclassificeerd als unknown")
    
except Exception as e:
    print(f"   ‚ùå Classificatie fout: {e}")

# Test 3: JSON Schema generatie
print("3Ô∏è‚É£ Testen JSON Schema generatie...")
try:
    from mcp_invoice_processor.processing.models import InvoiceData
    
    schema = InvoiceData.model_json_schema()
    print("   ‚úÖ JSON Schema generatie succesvol")
    print(f"   üìä Schema heeft {len(schema.get('properties', {}))} properties")
    
except Exception as e:
    print(f"   ‚ùå Schema generatie fout: {e}")

# Test 4: Enum values
print("4Ô∏è‚É£ Testen enum values...")
try:
    print(f"   üìã JSON_SCHEMA value: '{ExtractionMethod.JSON_SCHEMA.value}'")
    print(f"   üìã PROMPT_PARSING value: '{ExtractionMethod.PROMPT_PARSING.value}'")
    
    # Test enum conversie
    method_from_string = ExtractionMethod("json_schema")
    print(f"   ‚úÖ String naar enum conversie werkt: {method_from_string}")
    
except Exception as e:
    print(f"   ‚ùå Enum test fout: {e}")

print("\nüéâ Finale validatie voltooid!")
print("‚úÖ JSON Schema extractie systeem is operationeel!")
print("\nüìã Gebruik:")
print("   - ExtractionMethod.JSON_SCHEMA (default, betrouwbaar)")  
print("   - ExtractionMethod.PROMPT_PARSING (legacy, fallback)")
print("\nüîß In FastMCP:")
print("   - process_document_text(text, ctx, 'json_schema')")
print("   - process_document_text(text, ctx, 'prompt_parsing')")
